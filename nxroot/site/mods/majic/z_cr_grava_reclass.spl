////////////////////////////////////////////////////////////////////////
// Method:      z_cr_grava_reclass
// Author:      Alex Paz
// Created:     Friday, June 21, 2013 6:15:35 PM
// Use Case:    Spec "Processos de Gerenciamento de Incidentes (GINC) e Cumprimento de Requisições (CREQ)" - UC 3.1.3.2
// Modified by: 
// Modified:
// Description: Incrementa o controle ao no ticket reclassificar 
////////////////////////////////////////////////////////////////////////
cr::z_cr_grava_reclass(...)
{
	int zi, zi_depurar;
	string zs_metodo;
	zs_metodo = 'z_cr_grava_reclass - ';

    // Alterar valor zi_depurar parar 1 para debug mode
    zi_depurar = 0;
        
    // Entrada para debug mode
    if ( zi_depurar==1 ) { 
        logf(SIGNIFICANT, "============================================================="); 
        logf(SIGNIFICANT, "%s Inicio - $s", zs_metodo, (string) now());
        logf(SIGNIFICANT, "%s User - '%s'", zs_metodo, thread_userid());
        logf(SIGNIFICANT, "%s ARG Count : %d", zs_metodo, argc);
        for (zi=0; zi<argc; zi+=1) {
            logf(SIGNIFICANT, "%s ARG #%s : %s", zs_metodo, (string) zi, (string) argv[zi]);          
        } ;
        logf(SIGNIFICANT, "============================================================="); 
    } ;      
    ///////////////////////////////////////////////////////////////////////////////////////
    // Inicio do codigo
    string zs_msg, zs_campo, zs_valor, zs_wc, zs_status, zs_persid;
    object zo_groupLeader, zo_cr, zo_lista, zo_item;
    int zi_lista, zi_index, zi_qtd_reclass;
    
    zs_persid = argv[3] ;
    if ( is_null(argv[6]) ) {
        zi_qtd_reclass=0;
    } else {
        zi_qtd_reclass=(int) argv[6]+1;
    } ;
    send_wait (0, top_object(), "call_attr", "cr", "dob_by_persid", NULL, zs_persid);
    if ( msg_error() ) {
        logf(ERROR, "%s Erro ao instanciar objeto: %s", zs_metodo,  msg[0]);
        z_bloco_fim(zi_depurar, zs_metodo);
        return;
    } ;
    zo_cr=msg[0];
    if ( zi_depurar==1 ) { logf(SIGNIFICANT, "%s Instanciando GL", zs_metodo ); } ;
    send_wait(0, top_object(), "get_co_group");
    if (msg_error()) {
        logf(ERROR, "%s Erro ao instanciar GL: '%s'", msg[0]);
        z_bloco_fim(zi_depurar, zs_metodo);
        return;
    }
    zo_groupLeader = msg[0];
    if ( zi_depurar==1 ) { logf(SIGNIFICANT, "%s Lockando registro", zs_metodo ); } ;	
    send_wait(0, zo_groupLeader, "checkout", zo_cr); 
    if ( msg_error() ) {
    	logf(ERROR, "%s Erro ao bloquer ticket %s: '%s'", zo_cr.ref_num, msg[0]);
        z_bloco_fim(zi_depurar, zs_metodo);                
        return;
    } ;
    send_wait(0, zo_cr, "call_attr", "z_int_reclass", "set_val", zi_qtd_reclass, "SURE_SET");
    if ( msg_error() ) {
        logf(ERROR, "%s ERRO ao persistir valor: %s", zs_metodo,  msg[0]);
        z_bloco_fim(zi_depurar, zs_metodo);
        return;
    } else {
        if ( zi_depurar==1 ) { logf(SIGNIFICANT, "%s Valor persistido com sucesso", zs_metodo ); } ;
    } ;
    if ( zi_depurar==1 ) { logf(SIGNIFICANT, "%s Persistindo o objeto no banco", zs_metodo ); } ;	
    send_wait(0, zo_groupLeader, "checkin", zo_cr); 
    if ( msg_error() ) {
        logf(ERROR, "%s Erro ao persistir valor: %s", zs_metodo, msg[0]);
        z_bloco_fim(zi_depurar, zs_metodo);
        return;
    } ;
    // Fim do codigo
    ///////////////////////////////////////////////////////////////////////////////////////
	z_bloco_fim(zi_depurar, zs_metodo);
} ;

