////////////////////////////////////////////////////////////////////////
// Method:      z_alg_sol_filhos
// Author:      Alex Paz
// Created:     Monday, June 24, 2013 3:19:16 PM
// Use Case:    Spec X.X - UC 1.1.1.1
// Modified by: 
// Modified:
//
// Description: Replica solução do pai a todos os filhos 
//
////////////////////////////////////////////////////////////////////////
alg::z_alg_sol_filhos(...)
{
    
    
	int zi, zi_depurar;
	string zs_metodo;
	zs_metodo = 'z_alg_sol_filhos - ';

    // Alterar valor zi_depurar parar 1 para debug mode
    zi_depurar = 0;
        
    // Entrada para debug mode
    if ( zi_depurar==1 ) { 
        logf(SIGNIFICANT, "============================================================="); 
        logf(SIGNIFICANT, "%s Inicio - $s", zs_metodo, (string) now());
        logf(SIGNIFICANT, "%s User - '%s'", zs_metodo, thread_userid());
        logf(SIGNIFICANT, "%s ARG Count : %d", zs_metodo, argc);
        for (zi=0; zi<argc; zi+=1) {
            logf(SIGNIFICANT, "%s ARG #%s : %s", zs_metodo, (string) zi, (string) argv[zi]);          
        } ;
        logf(SIGNIFICANT, "============================================================="); 
    } ;      
    ///////////////////////////////////////////////////////////////////////////////////////
    // Inicio do codigo
    string zs_wc, zs_alg_persid, zs_persid, zs_alg_desc, zs_alg_analyst, zs_alg_action_desc, zs_alg_type;
    object zo_groupLeader, zo_cr, zo_lista, zo_item, zo_nova_alg, zo_alg;
    int zi_lista, zi_index, zi_alg_resocode, zi_alg_int;
    date zd_alg_time;
   
    zs_alg_persid=argv[3];
    zs_persid=argv[6];

    send_wait (0, top_object(), "call_attr", "cr", "dob_by_persid", NULL, zs_persid);
    if ( msg_error() ) {
        logf(ERROR, "%s Erro ao instanciar objeto: %s", zs_metodo,  msg[0]);
        z_bloco_fim(zi_depurar, zs_metodo);
        return;
    } ;
    zo_cr=msg[0];
    if ( zo_cr.type == "P" ) {
        if ( zi_depurar==1 ) { logf(SIGNIFICANT, "%s Ticket %s eh problema, saindo...", zs_metodo,  zo_cr.ref_num ); } ;
    } else {
        send_wait (0, top_object(), "call_attr", "alg", "dob_by_persid", NULL, zs_alg_persid);
        if ( msg_error() ) {
            logf(ERROR, "%s Erro ao instanciar objeto: %s", zs_metodo,  msg[0]);
            z_bloco_fim(zi_depurar, zs_metodo);
            return;
        } ;
        zo_alg=msg[0];
        send_wait(0, zo_alg, "get_attr_vals", 7, "description", "analyst", "action_desc", "internal", "z_srl_resocode", "system_time", "type" ) ;
        if ( msg_error() ) {
            logf(ERROR, "%s ERRO ao retornar atributos: %s", zs_metodo,  msg[0]);
            z_bloco_fim(zi_depurar, zs_metodo);
            return;
        } ;
        zs_alg_desc = msg[3];
        zs_alg_analyst = (string) msg[6];
        zs_alg_action_desc = msg[9];
        zi_alg_int = msg[12];
        zi_alg_resocode = msg[15];
        zd_alg_time = msg[18];
        zs_alg_type = msg[21];   
        
        zs_wc = format("parent = '%s' and active = 1", zs_persid );
        send_wait( 0, top_object(), "call_attr", "cr", "sync_fetch",  "STATIC", zs_wc, -1, 0);
        if ( msg_error() ) {
            logf(ERROR, "%s Erro ao definir lista de cr's: %s", zs_metodo,  msg[0]);
            z_bloco_fim(zi_depurar, zs_metodo);
            return;
        } ;
        zo_lista = msg[0] ;
        zi_lista = (int) msg[1] ;
        if ( zi_lista > 0 ) {
            //Cria um group leader
            if ( zi_depurar==1 ) { logf(SIGNIFICANT, "%s Instanciando GL", zs_metodo ); } ;
            send_wait(0, top_object(), "get_co_group");
            if (msg_error()) {
                logf(ERROR, "%s Erro ao instanciar GL: '%s'", msg[0]);
                z_bloco_fim(zi_depurar, zs_metodo);
                return;
            }
            zo_groupLeader = msg[0];
            if ( zi_depurar==1 ) { logf(SIGNIFICANT, "%s %d incidentes filhos, iterando...", zs_metodo,  zi_lista); } ;
            for ( zi_index = 0 ; zi_index < zi_lista; zi_index ++) { //Itera pelos items da zi_lista
                send_wait( 0, zo_lista, "dob_by_index", "DEFAULT", zi_index, zi_index);
                if ( msg_error() ) {
                    logf(ERROR, "%s Erro ao identificar Grupo: %s", zs_metodo,  msg[0]);
                    z_bloco_fim(zi_depurar, zs_metodo);
                    return;
                } ;
                zo_item = msg[0];
                send_wait( 0, top_object(), "call_attr", "alg", "get_new_dob", NULL, NULL, zo_groupLeader);
                if (msg_error()) {
                    logf(ERROR, "%s Erro ao criar alg: '%s'", zs_metodo, msg[0]);
                    return;
                }
                zo_nova_alg = msg[0];
                zo_nova_alg.call_req_id=zo_item.persistent_id;
                zo_nova_alg.type=zs_alg_type;
                zo_nova_alg.description=zs_alg_desc;
                zo_nova_alg.analyst=zs_alg_analyst;
                zo_nova_alg.action_desc=format("%s a partir do ticket número %s",zs_alg_action_desc, zo_cr.ref_num);
                zo_nova_alg.system_time=zd_alg_time;
                zo_nova_alg.z_srl_resocode=zi_alg_resocode;
                zo_nova_alg.internal=zi_alg_int;
                send_wait(0, zo_groupLeader, "checkin"); 
                if ( msg_error() ) {
                    logf(ERROR, "%s Erro ao persistir alg: %s", zs_metodo, msg[0]);
                    z_bloco_fim(zi_depurar, zs_metodo);
                    return;
                } ;
            } ; //Fim do for que Itera pelos items da zi_lista
            if ( zi_depurar==1 ) { logf(SIGNIFICANT, "%s Objetos persistidos com sucesso a partir do pai %s", zs_metodo, zo_cr.ref_num ); } ;
        } else {
            if ( zi_depurar==1 ) { logf(SIGNIFICANT, "%s Nao ha incidentes filhos no ticket %s", zs_metodo,  zo_cr.ref_num); } ;
        } ;
    } ;
    // Fim do codigo
    ///////////////////////////////////////////////////////////////////////////////////////
	z_bloco_fim(zi_depurar, zs_metodo);

} ;