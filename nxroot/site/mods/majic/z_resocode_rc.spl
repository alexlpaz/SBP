////////////////////////////////////////////////////////////////////////
// Method:      z_resocode_rc
// Author:      Alex Paz
// Created:     Monday, July 01, 2013 7:59:22 PM
// Use Case:    Spec X.X - UC 1.1.1.1
// Modified by: 
// Modified:
//
// Description: Atualiza relacionamento cauza raiz --> código de resolução a partir da criação da causa raiz
//
//
////////////////////////////////////////////////////////////////////////
resocode::z_resocode_rc(...)
{   
	int zi, zi_depurar;
	string zs_metodo;
	zs_metodo = 'z_resocode_rc - ';

    // Alterar valor zi_depurar parar 1 para debug mode
    zi_depurar = 0;
        
    // Entrada para debug mode
    if ( zi_depurar==1 ) { 
        logf(SIGNIFICANT, "============================================================="); 
        logf(SIGNIFICANT, "%s Inicio - $s", zs_metodo, (string) now());
        logf(SIGNIFICANT, "%s User - '%s'", zs_metodo, thread_userid());
        logf(SIGNIFICANT, "%s ARG Count : %d", zs_metodo, argc);
        for (zi=0; zi<argc; zi+=1) {
            logf(SIGNIFICANT, "%s ARG #%s : %s", zs_metodo, (string) zi, (string) argv[zi]);          
        } ;
        logf(SIGNIFICANT, "============================================================="); 
    } ;      
    ///////////////////////////////////////////////////////////////////////////////////////
    // Inicio do codigo
    string zs_msg, zs_campo, zs_valor, zs_wc, zs_status, zs_persid;
    object zo_groupLeader, zo_cr, zo_lista, zo_rootcause;
    int zi_lista, zi_index, zi_id_rc, zi_id_resocode;
    
    zi_id_resocode = argv[3];
    zi_id_rc = argv[6];
    zs_persid = format("rc:%s",(string)zi_id_rc);
    
    //Cria um group leader
    if ( zi_depurar==1 ) { logf(SIGNIFICANT, "%s Instanciando GL", zs_metodo ); } ;
    send_wait(0, top_object(), "get_co_group");
    if (msg_error()) {
        logf(ERROR, "%s Erro ao instanciar GL: '%s'", msg[0]);
        z_bloco_fim(zi_depurar, zs_metodo);
        return;
    }
    zo_groupLeader = msg[0];
    if ( zi_depurar==1 ) { logf(SIGNIFICANT, "%s Group leader: '%s'", zs_metodo, (string) zo_groupLeader ); } ;    
     
    send_wait (0, top_object(), "call_attr", "rc", "dob_by_persid", NULL, zs_persid);
    if ( msg_error() ) {
        logf(ERROR, "%s Erro ao instanciar objeto: %s", zs_metodo,  msg[0]);
        z_bloco_fim(zi_depurar, zs_metodo);
        return;
    } ;
    zo_rootcause=msg[0];
    //Faz o checkout do objeto zo_objeto
    if ( zi_depurar==1 ) { logf(SIGNIFICANT, "%s Lockando registro", zs_metodo ); } ;	
    send_wait(0, zo_groupLeader, "checkout", zo_rootcause); 
    if ( msg_error() ) {
        logf(ERROR, "%s Erro ao bloquear causa raiz %s: %s", zs_metodo, zo_rootcause.sym);
        z_bloco_fim(zi_depurar, zs_metodo);                
        return;
    } ;
    send_wait(0, zo_rootcause, "call_attr", "z_srl_resocode", "set_val", zi_id_resocode, "SURE_SET");
    if ( zi_depurar==1 ) { logf(SIGNIFICANT, "%s Persistindo o objeto no banco", zs_metodo ); } ;	
    send_wait(0, zo_groupLeader, "checkin", zo_rootcause); 
    if ( msg_error() ) {
        logf(ERROR, "%s Erro ao persistir valor: %s", zs_metodo, msg[0]);
        z_bloco_fim(zi_depurar, zs_metodo);
        return;
    } ;

    // Fim do codigo
    ///////////////////////////////////////////////////////////////////////////////////////
	z_bloco_fim(zi_depurar, zs_metodo);

} ;